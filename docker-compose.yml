version: '3.9'

x-common-web-configs: &common-web-configs
  build:
    context: .
    dockerfile: web.Dockerfile
  volumes:
    - .:/usr/src/app/
  env_file:
    - .env
  depends_on:
    - db
    - redis
  networks:
    - django-saas-network

services:
  db:
    image: postgres:14-alpine
    restart: "always"
    ports:
      - "5432:5432"
    environment:
      - LC_ALL=C.UTF-8
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db_local
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - django-saas-network

  migrate:
    command: python manage.py migrate
    <<: *common-web-configs

  web:
    command: python manage.py runserver 0.0.0.0:8000  # change to run server plus once they fix the reload bug
    restart: "unless-stopped"
    ports:
      - "8000:8000"
    <<: *common-web-configs

  shell:
    command: bash
    <<: *common-web-configs

  assets:
    build:
      context: .
      dockerfile: assets.Dockerfile
    command: npm run dev
    restart: "unless-stopped"
    tty: true
    volumes:
      - .:/usr/src/app  # We need to watch changes in templates and static files so just copy everything

  celery-worker:
    command: celery -A core worker -l INFO
    <<: *common-web-configs

  celery-beat:
    command: celery -A core beat -l INFO
    <<: *common-web-configs

  celery-flower:
    image: mher/flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379
      - FLOWER_PORT=8888
    ports:
      - "8888:8888"
    networks:
      - django-saas-network

  redis:
    image: redis:6-alpine
    networks:
      - django-saas-network

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    volumes:
      - pgadmin:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    networks:
      - django-saas-network

  mailhog:
    image: mailhog/mailhog
    restart: always
    logging:
      driver: 'none'
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - django-saas-network

volumes:
  pgdata:
  pgadmin:

networks:
  django-saas-network:
